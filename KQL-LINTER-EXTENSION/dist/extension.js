"use strict";var H=Object.create;var q=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var X=Object.getOwnPropertyNames;var J=Object.getPrototypeOf,Z=Object.prototype.hasOwnProperty;var Y=(l,e)=>{for(var t in e)q(l,t,{get:e[t],enumerable:!0})},N=(l,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of X(e))!Z.call(l,n)&&n!==t&&q(l,n,{get:()=>e[n],enumerable:!(s=G(e,n))||s.enumerable});return l};var b=(l,e,t)=>(t=l!=null?H(J(l)):{},N(e||!l||!l.__esModule?q(t,"default",{value:l,enumerable:!0}):t,l)),ee=l=>N(q({},"__esModule",{value:!0}),l);var ie={};Y(ie,{activate:()=>te,deactivate:()=>ne});module.exports=ee(ie);var a=b(require("vscode"));var y=b(require("vscode")),C=b(require("fs")),R=b(require("path")),U=class{schemas=new Map;schemaPath;currentSource="auto";xdrTables=new Set;sentinelTables=new Set;constructor(e){this.schemaPath=e||this.getDefaultSchemaPath(),this.initializeBuiltInSchemas(),this.loadSchemas()}getDefaultSchemaPath(){let t=y.workspace.getConfiguration("kqlSchemaTools").get("schemaPath");if(t&&C.existsSync(t))return t;let s=y.workspace.workspaceFolders?.[0];if(s){let i=R.join(s.uri.fsPath,"schemas");if(C.existsSync(i))return i}let n=y.extensions.getExtension("kql-tools.kql-schema-reference-tools")?.extensionPath;if(n){let i=R.join(n,"schemas");if(C.existsSync(i))return i}return""}initializeBuiltInSchemas(){let e=["DeviceEvents","DeviceFileEvents","DeviceImageLoadEvents","DeviceLogonEvents","DeviceNetworkEvents","DeviceNetworkInfo","DeviceProcessEvents","DeviceRegistryEvents","DeviceFileCertificateInfo","DeviceInfo","AlertEvidence","AlertInfo","EmailEvents","EmailPostDeliveryEvents","EmailUrlInfo","EmailAttachmentInfo","IdentityLogonEvents","IdentityQueryEvents","IdentityDirectoryEvents","CloudAppEvents","BehaviorAnalytics","AADSignInEventsBeta","AADProvisioningLogs"],t=["SecurityEvent","Syslog","Event","Heartbeat","Perf","WindowsEvent","CommonSecurityLog","DnsEvents","W3CIISLog","SecurityAlert","SecurityIncident","ThreatIntelligenceIndicator","AuditLogs","SigninLogs","AADNonInteractiveUserSignInLogs","AADServicePrincipalSignInLogs","AADManagedIdentitySignInLogs","OfficeActivity","AzureActivity","AWSCloudTrail","GCPAuditLogs"];e.forEach(s=>this.xdrTables.add(s)),t.forEach(s=>this.sentinelTables.add(s))}loadSchemas(){if(!this.schemaPath||!C.existsSync(this.schemaPath)){console.warn("Schema path not found or invalid:",this.schemaPath);return}let e=R.join(this.schemaPath,"xdr");C.existsSync(e)&&this.loadSchemasFromDirectory(e,"xdr");let t=R.join(this.schemaPath,"sentinel");C.existsSync(t)&&this.loadSchemasFromDirectory(t,"sentinel"),this.loadSchemasFromDirectory(this.schemaPath,"auto"),console.log(`Loaded ${this.schemas.size} table schemas`)}loadSchemasFromDirectory(e,t){if(!C.existsSync(e))return;let s=C.readdirSync(e).filter(n=>n.endsWith(".md"));for(let n of s)try{let i=this.parseSchemaFile(R.join(e,n),t);i&&(this.schemas.set(i.tableName,i),console.log(`Loaded schema for ${i.tableName} (${t})`))}catch(i){console.error(`Error parsing schema file ${n}:`,i)}}parseSchemaFile(e,t="auto"){let n=C.readFileSync(e,"utf8").split(`
`),i="",o="",r=[],c="",f=!1,p=!1;for(let m of n){if(m.startsWith("# ")&&!i){i=m.substring(2).trim();continue}if(i&&!o&&m.trim()&&!m.startsWith("#")&&!m.startsWith("|")){o=m.trim();continue}if(m.includes("| Column name | Data type | Description |")){f=!0,p=!1;continue}if(f&&!p&&m.includes("|---")){p=!0;continue}if(f&&p&&m.startsWith("|")){let w=m.split("|").map(D=>D.trim()).filter(D=>D);w.length>=3&&r.push({name:w[0],dataType:w[1],description:w[2]})}if(m.includes("Microsoft Learn")&&m.includes("http")){let w=m.match(/\[.*?\]\((https?:\/\/[^\)]+)\)/);w&&(c=w[1])}f&&(!m.trim()||m.startsWith("#"))&&(f=!1)}if(!i||r.length===0)return null;let h=t==="auto"?this.detectTableSource(i):t;return{tableName:i,description:o,columns:r,documentationLink:c,category:this.determineTableCategory(i,h),source:h,dataConnector:this.getDataConnector(i,h),commonUseCase:this.getCommonUseCase(i,h)}}detectTableSource(e){return this.xdrTables.has(e)?"xdr":this.sentinelTables.has(e)?"sentinel":"auto"}determineTableCategory(e,t){return t==="xdr"?e.startsWith("Device")?"Device":e.startsWith("Email")?"Email":e.startsWith("Identity")?"Identity":e.startsWith("Alert")?"Alert":e.startsWith("Cloud")?"Cloud":"Other":t==="sentinel"?e.includes("Security")?"Security":e.includes("Azure")||e.includes("AWS")||e.includes("GCP")?"Cloud":e.includes("Office")||e.includes("AAD")?"Office 365":"Other":"Unknown"}getDataConnector(e,t){return t==="xdr"?"Microsoft Defender XDR":t==="sentinel"?e.includes("Azure")?"Azure Activity":e.includes("AWS")?"AWS CloudTrail":e.includes("Office")?"Office 365":e.includes("Security")?"Security Events":"Various":"Unknown"}getCommonUseCase(e,t){return{DeviceEvents:"General device activity monitoring",DeviceProcessEvents:"Process execution tracking",DeviceNetworkEvents:"Network connection monitoring",SecurityEvent:"Windows security event analysis",SigninLogs:"User authentication monitoring",AuditLogs:"Administrative activity tracking"}[e]||"General security monitoring"}validateKQLQuery(e){let t={isValid:!0,errors:[],warnings:[],usedTables:[],usedColumns:[],detectedSource:"auto",performance:[]},s=/\b(Device\w+|Alert\w+|Identity\w+|Email\w+|Cloud\w+|AAD\w+|Behavior\w+|DataSecurity\w+|Message\w+|Exposure\w+|OAuth\w+|Disruption\w+|Url\w+|Security\w+|Syslog|Event|Heartbeat|Perf|WindowsEvent|CommonSecurityLog|DnsEvents|W3CIISLog|ThreatIntelligenceIndicator|AuditLogs|SigninLogs|OfficeActivity|AzureActivity|AWSCloudTrail|GCPAuditLogs)\b/g,n=e.match(s);if(n){let r=[...new Set(n)];t.usedTables=r,t.detectedSource=this.detectQuerySource(r);for(let c of r)this.schemas.has(c)||(t.isValid=!1,t.errors.push({message:`Table '${c}' not found in current schemas`,line:this.getLineNumber(e,c),column:0,severity:"error",code:"table-not-found"}))}let i=/\b(\w+)\s*(?:[><=!]+|has|contains|startswith|endswith|matches)/g,o=e.match(i);if(o)for(let r of o){let c=r.split(/\s*[><=!]+|\s+has|\s+contains|\s+startswith|\s+endswith|\s+matches/)[0];this.validateColumnUsage(c,t.usedTables,t)}return this.checkDeprecatedPatterns(e,t),this.addPerformanceHints(e,t),t}detectQuerySource(e){let t=0,s=0;for(let n of e)this.xdrTables.has(n)?t++:this.sentinelTables.has(n)&&s++;return t>s?"xdr":s>t?"sentinel":"auto"}addPerformanceHints(e,t){!e.includes("ago(")&&!e.includes("between(")&&t.performance?.push({message:"Consider adding time filters to improve query performance",line:1,column:0,impact:"high",suggestion:'Add "| where Timestamp > ago(1d)" or similar time filter'}),e.includes("startswith")&&e.includes('"*')&&t.performance?.push({message:"Leading wildcards can significantly impact performance",line:this.getLineNumber(e,'"*'),column:0,impact:"medium",suggestion:'Consider using "contains" or "endswith" instead'}),!e.includes("top ")&&!e.includes("limit ")&&!e.includes("summarize")&&t.performance?.push({message:'Consider adding "top" or "limit" to control result size',line:1,column:0,impact:"medium",suggestion:'Add "| top 1000 by Timestamp desc" or similar limit'})}validateColumnUsage(e,t,s){if(t.length===0)return;let n=!1;for(let i of t){let o=this.schemas.get(i);if(o&&o.columns.some(r=>r.name===e)){n=!0,s.usedColumns.push({table:i,column:e});break}}n||s.warnings.push({message:`Column '${e}' not found in used tables: ${t.join(", ")}`,line:this.getLineNumber("",e),column:0,suggestion:this.suggestColumnName(e,t)})}checkDeprecatedPatterns(e,t){(t.detectedSource==="xdr"||t.detectedSource==="auto")&&e.includes("TimeGenerated")&&t.warnings.push({message:'Use "Timestamp" instead of "TimeGenerated" in XDR queries',line:this.getLineNumber(e,"TimeGenerated"),column:0,suggestion:'Replace "TimeGenerated" with "Timestamp"',code:"deprecated-column"}),(t.detectedSource==="sentinel"||t.detectedSource==="auto")&&e.includes("Timestamp")&&t.detectedSource==="sentinel"&&t.warnings.push({message:'Use "TimeGenerated" instead of "Timestamp" in Sentinel queries',line:this.getLineNumber(e,"Timestamp"),column:0,suggestion:'Replace "Timestamp" with "TimeGenerated"',code:"deprecated-column"});let s=[{pattern:"ThreatIntelligenceIndicator",replacement:"Use appropriate XDR or updated Sentinel table",applicableTo:["xdr","sentinel"]},{pattern:"SecurityAlert",replacement:"Use AlertInfo for XDR or SecurityIncident for Sentinel",applicableTo:["auto"]}];for(let n of s)e.includes(n.pattern)&&(n.applicableTo.includes(t.detectedSource)||n.applicableTo.includes("auto"))&&t.warnings.push({message:`"${n.pattern}" may be deprecated`,line:this.getLineNumber(e,n.pattern),column:0,suggestion:n.replacement,code:"deprecated-table"})}suggestColumnName(e,t){let s=[];for(let n of t){let i=this.schemas.get(n);if(i){let o=i.columns.filter(r=>r.name.toLowerCase().includes(e.toLowerCase())||e.toLowerCase().includes(r.name.toLowerCase()));s.push(...o.map(r=>r.name))}}return s.length>0?`Did you mean: ${s.join(", ")}?`:""}getLineNumber(e,t){let s=e.split(`
`);for(let n=0;n<s.length;n++)if(s[n].includes(t))return n+1;return 1}getSchema(e){return this.schemas.get(e)}getAllSchemas(){return new Map(this.schemas)}getTableNames(){return Array.from(this.schemas.keys())}searchColumns(e){let t=[];for(let[s,n]of this.schemas){let i=n.columns.filter(o=>o.name.toLowerCase().includes(e.toLowerCase())||o.description.toLowerCase().includes(e.toLowerCase()));for(let o of i)t.push({table:s,column:o})}return t}refreshSchema(){this.schemas.clear(),this.loadSchemas()}getAvailableTables(){return Array.from(this.schemas.keys())}getTableColumns(e){let t=this.schemas.get(e);return t?t.columns:[]}getTableInfo(e){return this.schemas.get(e)}setSchemaSource(e){this.currentSource=e,this.refreshSchema()}getCurrentSource(){return this.currentSource}getTablesBySource(e){return Array.from(this.schemas.values()).filter(t=>t.source===e).map(t=>t.tableName)}showTableSchema(e){let t=this.schemas.get(e);if(t){let s=this.generateSchemaMarkdown(t);y.workspace.openTextDocument({content:s,language:"markdown"}).then(n=>{y.window.showTextDocument(n)})}else y.window.showErrorMessage(`Table '${e}' not found in schemas`)}generateSchemaMarkdown(e){let t=`# ${e.tableName}

`;t+=`**Source:** ${e.source.toUpperCase()}
`,t+=`**Category:** ${e.category}
`,t+=`**Data Connector:** ${e.dataConnector}

`,t+=`${e.description}

`,e.commonUseCase&&(t+=`**Common Use Case:** ${e.commonUseCase}

`),e.documentationLink&&(t+=`[Official Documentation](${e.documentationLink})

`),t+=`## Columns

`,t+=`| Column name | Data type | Description |
`,t+=`|-------------|-----------|-------------|
`;for(let s of e.columns)t+=`| ${s.name} | ${s.dataType} | ${s.description} |
`;return t}};var E=b(require("vscode")),F=b(require("https")),A=b(require("fs")),Q=b(require("path")),P=class{baseUrl="https://learn.microsoft.com/en-us/defender-xdr";schemaListUrl=`${this.baseUrl}/advanced-hunting-schema-tables`;validator;outputChannel;constructor(e){this.validator=e,this.outputChannel=E.window.createOutputChannel("KQL Schema Updater")}async updateAllSchemas(){this.outputChannel.show(),this.outputChannel.appendLine("\u{1F504} Starting schema update from Microsoft Learn...");let e={success:!1,tablesUpdated:[],errors:[],lastUpdate:new Date};try{let t=await this.fetchTableList();this.outputChannel.appendLine(`\u{1F4CB} Found ${t.length} tables to update`);for(let s of t){try{await this.updateTableSchema(s),e.tablesUpdated.push(s),this.outputChannel.appendLine(`\u2705 Updated ${s}`)}catch(n){let i=`Failed to update ${s}: ${n}`;e.errors.push(i),this.outputChannel.appendLine(`\u274C ${i}`)}await new Promise(n=>setTimeout(n,100))}e.success=e.errors.length===0,e.success?(this.outputChannel.appendLine(`\u{1F389} Successfully updated all ${e.tablesUpdated.length} schemas!`),E.window.showInformationMessage(`KQL Schemas Updated: ${e.tablesUpdated.length} tables refreshed from Microsoft Learn`)):(this.outputChannel.appendLine(`\u26A0\uFE0F Updated ${e.tablesUpdated.length} schemas with ${e.errors.length} errors`),E.window.showWarningMessage(`KQL Schema Update: ${e.tablesUpdated.length} updated, ${e.errors.length} errors. Check output for details.`)),this.validator.refreshSchema()}catch(t){let s=`Schema update failed: ${t}`;e.errors.push(s),this.outputChannel.appendLine(`\u{1F4A5} ${s}`),E.window.showErrorMessage(`KQL Schema Update Failed: ${t}`)}return e}async fetchTableList(){let e=await this.fetchUrl(this.schemaListUrl),t=[],s=/\|\s*([A-Za-z0-9_]+)\s*\|\s*([^|]+)\s*\|/g,n;for(;(n=s.exec(e))!==null;){let o=n[1].trim();o&&!o.toLowerCase().includes("table")&&!o.toLowerCase().includes("name")&&o.length>2&&/^[A-Z]/.test(o)&&t.push(o)}let i=["DeviceEvents","DeviceProcessEvents","DeviceNetworkEvents","DeviceFileEvents","DeviceRegistryEvents","DeviceLogonEvents","DeviceImageLoadEvents","DeviceInfo","EmailEvents","EmailPostDeliveryEvents","EmailAttachmentInfo","EmailUrlInfo","AlertEvidence","AlertInfo","IdentityLogonEvents","IdentityQueryEvents","IdentityDirectoryEvents","CloudAppEvents","AADSignInEventsBeta","AADSpnSignInEventsBeta"];for(let o of i)!t.includes(o)&&e.includes(o)&&t.push(o);return[...new Set(t)].sort()}async updateTableSchema(e){let t=`${this.baseUrl}/advanced-hunting-${e.toLowerCase()}-table`;try{let s=await this.fetchUrl(t),n=this.parseTableSchemaFromHtml(e,s);if(n)await this.saveSchemaToFile(n);else throw new Error("Failed to parse schema from HTML")}catch(s){let n=`${this.baseUrl}/advanced-hunting-${e.toLowerCase()}`;try{let i=await this.fetchUrl(n),o=this.parseTableSchemaFromHtml(e,i);if(o)await this.saveSchemaToFile(o);else throw new Error("Failed to parse schema from alternative URL")}catch(i){throw new Error(`Both primary and alternative URLs failed: ${s}, ${i}`)}}}parseTableSchemaFromHtml(e,t){let s=[],n="",i=t.match(/<p[^>]*>([^<]+)<\/p>/);i&&(n=i[1].trim());let r=/\|\s*Column name\s*\|\s*Data type\s*\|\s*Description\s*\|(.*?)(?=\n\n|\n\|(?!\s*\w+\s*\|))/gs.exec(t);if(r){let c=r[1],f=/\|\s*([^|]+)\s*\|\s*([^|]+)\s*\|\s*([^|]+)\s*\|/g,p;for(;(p=f.exec(c))!==null;){let h=p[1].trim(),m=p[2].trim().toLowerCase(),w=p[3].trim();h&&m&&w&&!h.toLowerCase().includes("column")&&!m.toLowerCase().includes("type")&&s.push({name:h,dataType:this.normalizeDataType(m),description:w,isRequired:h==="Timestamp",isKey:h.toLowerCase().includes("id")||h==="Timestamp"})}}return s.length===0?null:{tableName:e,description:n||`Events and data from ${e}`,columns:s,category:this.determineCategory(e),source:"xdr",documentationLink:`${this.baseUrl}/advanced-hunting-${e.toLowerCase()}-table`,commonUseCase:this.getCommonUseCase(e)}}normalizeDataType(e){switch(e.toLowerCase().trim()){case"string":return"string";case"datetime":return"datetime";case"int":case"integer":case"long":return"int";case"bool":case"boolean":return"bool";case"dynamic":return"dynamic";case"real":case"decimal":return"real";default:return"string"}}determineCategory(e){return e.startsWith("Device")?"Device Events":e.startsWith("Email")?"Email & Collaboration":e.startsWith("Identity")?"Identity":e.startsWith("Alert")?"Alerts":e.startsWith("Cloud")?"Cloud Apps":e.startsWith("AAD")?"Azure Active Directory":"Other"}getCommonUseCase(e){return{DeviceProcessEvents:"Hunt for malicious processes, lateral movement, and privilege escalation",DeviceNetworkEvents:"Investigate network connections, C2 communications, and data exfiltration",DeviceFileEvents:"Track file operations, malware drops, and document access",EmailEvents:"Analyze email threats, phishing campaigns, and delivery patterns",AlertEvidence:"Correlate alert details with other security events",IdentityLogonEvents:"Monitor authentication patterns and suspicious logons"}[e]||`Monitor and analyze ${e} data for security insights`}async saveSchemaToFile(e){let t=E.extensions.getExtension("kql-tools.kql-schema-reference-tools")?.extensionPath;if(!t)throw new Error("Extension path not found");let s=Q.join(t,"schemas","xdr");A.existsSync(s)||A.mkdirSync(s,{recursive:!0});let n=Q.join(s,`${e.tableName}.md`),i=this.generateMarkdownSchema(e);A.writeFileSync(n,i,"utf8")}generateMarkdownSchema(e){let t=`# ${e.tableName}

`;t+=`**Category:** ${e.category}
`,t+=`**Description:** ${e.description}

`,e.documentationLink&&(t+=`**Documentation:** [Microsoft Learn](${e.documentationLink})

`),t+=`## Schema

`,t+=`| Column | Type | Description |
`,t+=`|--------|------|-------------|
`;for(let s of e.columns)t+=`| ${s.name} | ${s.dataType} | ${s.description} |
`;return t+=`
## Common Use Cases

`,t+=`${e.commonUseCase}

`,t+=`## Sample Queries

`,t+="```kql\n",t+=`// Basic query template for ${e.tableName}
`,t+=`${e.tableName}
`,t+=`| where Timestamp > ago(24h)
`,e.columns.some(s=>s.name==="ActionType")&&(t+=`| where ActionType == "SpecificAction"
`),t+=`| project Timestamp, ${e.columns.slice(0,4).map(s=>s.name).join(", ")}
`,t+=`| limit 100
`,t+="```\n\n",t+=`*Last updated: ${new Date().toISOString()}*
`,t}fetchUrl(e){return new Promise((t,s)=>{F.get(e,n=>{let i="";n.on("data",o=>{i+=o}),n.on("end",()=>{n.statusCode===200?t(i):s(new Error(`HTTP ${n.statusCode}: ${n.statusMessage}`))})}).on("error",n=>{s(n)})})}dispose(){this.outputChannel.dispose()}};var u=b(require("vscode")),x=class{validator;constructor(e){this.validator=e}provideCompletionItems(e,t,s,n){let o=e.lineAt(t).text,r=[],c=this.validator.getAvailableTables();for(let p of c){let h=this.validator.getTableInfo(p),m=new u.CompletionItem(p,u.CompletionItemKind.Class);m.documentation=h?`${h.source.toUpperCase()} Table: ${p} - ${h.description}`:`Table: ${p}`,m.insertText=p,m.detail=h?.category||"Table",r.push(m)}let f=[{name:"where",desc:"Filter rows based on a condition"},{name:"project",desc:"Select specific columns"},{name:"extend",desc:"Add calculated columns"},{name:"summarize",desc:"Aggregate data"},{name:"join",desc:"Join tables"},{name:"union",desc:"Combine tables"},{name:"sort",desc:"Sort results"},{name:"top",desc:"Get top N results"},{name:"limit",desc:"Limit number of results"},{name:"distinct",desc:"Get unique values"}];for(let p of f){let h=new u.CompletionItem(p.name,u.CompletionItemKind.Keyword);h.documentation=`KQL operator: ${p.desc}`,h.insertText=p.name+" ",r.push(h)}return r}provideHover(e,t,s){let n=e.getWordRangeAtPosition(t);if(!n)return null;let i=e.getText(n);if(this.validator.getAvailableTables().includes(i)){let r=this.validator.getTableInfo(i);if(r){let c=new u.MarkdownString;return c.appendMarkdown(`**${r.source.toUpperCase()} Table: ${i}**

`),c.appendMarkdown(`**Category:** ${r.category}

`),c.appendMarkdown(`${r.description}

`),new u.Hover(c,n)}}return null}async validateDocument(e,t){if(e.languageId!=="kql")return;let s=e.getText(),n=this.validator.validateKQLQuery(s),i=[];for(let o of n.errors){let r=new u.Range(new u.Position(Math.max(0,o.line-1),o.column),new u.Position(Math.max(0,o.line-1),o.column+10)),c=new u.Diagnostic(r,o.message,o.severity==="error"?u.DiagnosticSeverity.Error:u.DiagnosticSeverity.Warning);c.code=o.code,c.source="KQL Schema Tools",i.push(c)}for(let o of n.warnings){let r=new u.Range(new u.Position(Math.max(0,o.line-1),o.column),new u.Position(Math.max(0,o.line-1),o.column+10)),c=new u.Diagnostic(r,o.message,u.DiagnosticSeverity.Warning);c.code=o.code,c.source="KQL Schema Tools",i.push(c)}t.set(e.uri,i)}async validateCurrentDocument(e){let t=u.window.activeTextEditor;t&&t.document.languageId==="kql"&&(await this.validateDocument(t.document,e),u.window.showInformationMessage(`KQL validation complete. Detected source: ${this.validator.validateKQLQuery(t.document.getText()).detectedSource.toUpperCase()}`))}async formatCurrentDocument(){let e=u.window.activeTextEditor;if(e&&e.document.languageId==="kql"){let t=e.document,s=t.getText(),n=this.formatKQLQuery(s),i=new u.WorkspaceEdit,o=new u.Range(t.positionAt(0),t.positionAt(s.length));i.replace(t.uri,o,n),await u.workspace.applyEdit(i),u.window.showInformationMessage("KQL query formatted")}}formatKQLQuery(e){return e.replace(/\s*\|\s*/g,`
| `).replace(/\s*,\s*/g,", ").replace(/\s*(==|!=|<=|>=|<|>)\s*/g," $1 ").replace(/\s+/g," ").replace(/\n\s+/g,`
`).trim()}};var T=b(require("vscode")),L=class extends T.TreeItem{constructor(t,s,n,i){super(t,s);this.label=t;this.collapsibleState=s;this.contextValue=n;this.schema=i;i?(this.tooltip=`${i.description}

Source: ${i.source.toUpperCase()}
Columns: ${i.columns.length}`,this.description=`${i.source.toUpperCase()} (${i.columns.length} columns)`,this.iconPath=new T.ThemeIcon(i.source==="xdr"?"shield":i.source==="sentinel"?"eye":"database")):this.iconPath=new T.ThemeIcon("folder"),this.command=n==="table"?{command:"kql-schema-tools.viewTableSchema",title:"View Schema",arguments:[t]}:void 0}},k=class{constructor(e){this.validator=e}_onDidChangeTreeData=new T.EventEmitter;onDidChangeTreeData=this._onDidChangeTreeData.event;currentSource="auto";refresh(){this._onDidChangeTreeData.fire()}switchSource(e){this.currentSource=e,this.validator.setSchemaSource(e),this.refresh()}getTreeItem(e){return e}getChildren(e){if(e){if(e.contextValue==="category")return Promise.resolve(this.getTablesInCategory(e.label));if(e.contextValue==="source")return Promise.resolve(this.getCategoriesForSource(e.label))}else return Promise.resolve(this.getRootItems());return Promise.resolve([])}getRootItems(){let e=[];if(this.currentSource==="auto")e.push(new L("XDR Tables",T.TreeItemCollapsibleState.Expanded,"source")),e.push(new L("Sentinel Tables",T.TreeItemCollapsibleState.Collapsed,"source"));else return this.getCategoriesForSource(this.currentSource);return e}getCategoriesForSource(e){let t=e==="XDR Tables"?"xdr":e==="Sentinel Tables"?"sentinel":e,s=this.validator.getAllSchemas(),n=new Set;for(let[,i]of s)(i.source===t||this.currentSource==="auto")&&n.add(i.category);return Array.from(n).sort().map(i=>new L(i,T.TreeItemCollapsibleState.Collapsed,"category"))}getTablesInCategory(e){let t=this.validator.getAllSchemas(),s=[];for(let[n,i]of t)i.category===e&&s.push(new L(n,T.TreeItemCollapsibleState.None,"table",i));return s.sort((n,i)=>n.label.localeCompare(i.label))}getTableByName(e){return this.validator.getTableInfo(e)}getCurrentSource(){return this.currentSource}};var g=b(require("vscode")),$=class{rules=new Map;validator;constructor(e){this.validator=e}createNewRule(e){let t=e?.id||this.generateId(),s={id:t,name:e?.name||"New Detection Rule",description:e?.description||"Enter rule description...",kqlQuery:e?.kqlQuery||`// Enter your KQL query here
`,severity:e?.severity||"Medium",category:e?.category||"General",mitreTechniques:e?.mitreTechniques||[],isEnabled:e?.isEnabled??!0,author:e?.author||"Unknown",createdDate:new Date,lastModifiedDate:new Date};return this.rules.set(t,s),this.openRuleInEditor(s),s}async validateCurrentRule(){let e=g.window.activeTextEditor;if(!e){g.window.showWarningMessage("No active editor found");return}let t=e.document;if(t.languageId!=="kql"){g.window.showWarningMessage("Current document is not a KQL file");return}let s=t.getText(),n=this.validator.validateKQLQuery(s);if(n.isValid)g.window.showInformationMessage(`Rule validation passed! Detected source: ${n.detectedSource.toUpperCase()}, Tables: ${n.usedTables.join(", ")}`);else{let i=n.errors.length,o=n.warnings.length;g.window.showErrorMessage(`Rule validation failed: ${i} errors, ${o} warnings`)}}async exportRulesToCSV(){if(this.rules.size===0){g.window.showWarningMessage("No rules to export");return}let e=this.generateCSVContent(),t=await g.window.showSaveDialog({defaultUri:g.Uri.file("detection-rules.csv"),filters:{"CSV Files":["csv"]}});t&&(await g.workspace.fs.writeFile(t,Buffer.from(e,"utf8")),g.window.showInformationMessage(`Exported ${this.rules.size} rules to ${t.fsPath}`))}async importRulesFromCSV(){let e=await g.window.showOpenDialog({canSelectMany:!1,filters:{"CSV Files":["csv"]},openLabel:"Import Rules"});if(e&&e[0])try{let t=await g.workspace.fs.readFile(e[0]),s=Buffer.from(t).toString("utf8"),n=this.parseCSVContent(s);for(let i of n)this.rules.set(i.id,i);g.window.showInformationMessage(`Imported ${n.length} rules`)}catch(t){g.window.showErrorMessage(`Failed to import rules: ${t}`)}}updateRule(e,t){let s=this.rules.get(e);if(!s)return null;let n={...s,...t,lastModifiedDate:new Date};return this.rules.set(e,n),n}deleteRule(e){return this.rules.delete(e)}getRule(e){return this.rules.get(e)}getAllRules(){return Array.from(this.rules.values())}getRulesByCategory(e){return this.getAllRules().filter(t=>t.category===e)}searchRules(e){let t=e.toLowerCase();return this.getAllRules().filter(s=>s.name.toLowerCase().includes(t)||s.description.toLowerCase().includes(t)||s.kqlQuery.toLowerCase().includes(t))}async openRuleInEditor(e){let t=this.generateRuleTemplate(e),s=await g.workspace.openTextDocument({content:t,language:"kql"});await g.window.showTextDocument(s)}generateRuleTemplate(e){return`// Detection Rule: ${e.name}
// Description: ${e.description}
// Severity: ${e.severity}
// Category: ${e.category}
// Author: ${e.author}
// Created: ${e.createdDate.toISOString()}
// MITRE ATT&CK Techniques: ${e.mitreTechniques.join(", ")||"None"}

${e.kqlQuery}`}generateCSVContent(){let t=[["ID","Name","Description","KQL Query","Severity","Category","MITRE Techniques","Enabled","Author","Created Date"].join(",")];for(let[,s]of this.rules){let n=[this.escapeCsvField(s.id),this.escapeCsvField(s.name),this.escapeCsvField(s.description),this.escapeCsvField(s.kqlQuery),this.escapeCsvField(s.severity),this.escapeCsvField(s.category),this.escapeCsvField(s.mitreTechniques.join(";")),s.isEnabled.toString(),this.escapeCsvField(s.author),s.createdDate.toISOString()];t.push(n.join(","))}return t.join(`
`)}parseCSVContent(e){let t=e.split(`
`),s=[];if(t.length<2)throw new Error("Invalid CSV format");for(let n=1;n<t.length;n++){let i=this.parseCSVLine(t[n]);if(i.length>=10){let o={id:i[0]||this.generateId(),name:i[1]||"Imported Rule",description:i[2]||"",kqlQuery:i[3]||"",severity:i[4]||"Medium",category:i[5]||"General",mitreTechniques:i[6]?i[6].split(";"):[],isEnabled:i[7]==="true",author:i[8]||"Unknown",createdDate:i[9]?new Date(i[9]):new Date,lastModifiedDate:new Date};s.push(o)}}return s}parseCSVLine(e){let t=[],s="",n=!1;for(let i=0;i<e.length;i++){let o=e[i];o==='"'?n=!n:o===","&&!n?(t.push(s),s=""):s+=o}return t.push(s),t}escapeCsvField(e){return e.includes(",")||e.includes('"')||e.includes(`
`)?`"${e.replace(/"/g,'""')}"`:e}generateId(){return"rule_"+Date.now()+"_"+Math.random().toString(36).substr(2,9)}};var M=class{schemaValidator;REQUIRED_TIMESTAMP="Timestamp";ENDPOINT_IDENTIFIERS=["DeviceId","ReportId"];ALERT_IDENTIFIERS=["Timestamp"];OBSERVATION_IDENTIFIERS=["ObservationId"];DEFAULT_IDENTIFIERS=["ReportId"];IMPACTED_ASSET_COLUMNS=["DeviceId","DeviceName","RemoteDeviceName","RecipientEmailAddress","SenderFromAddress","SenderMailFromAddress","RecipientObjectId","AccountObjectId","AccountSid","AccountUpn","InitiatingProcessAccountSid","InitiatingProcessAccountUpn","InitiatingProcessAccountObjectId"];NRT_SUPPORTED_TABLES=["AlertEvidence","CloudAppEvents","DeviceEvents","DeviceFileCertificateInfo","DeviceFileEvents","DeviceImageLoadEvents","DeviceLogonEvents","DeviceNetworkEvents","DeviceNetworkInfo","DeviceInfo","DeviceProcessEvents","DeviceRegistryEvents","EmailAttachmentInfo","EmailEvents","EmailPostDeliveryEvents","EmailUrlInfo","IdentityDirectoryEvents","IdentityLogonEvents","IdentityQueryEvents","UrlClickEvents"];NRT_INCOMPATIBLE_OPERATORS=["join","union","externaldata","//","--","/*","*/"];constructor(e){this.schemaValidator=e}validateDetectionRule(e){let t={isValid:!0,requirements:{hasRequiredColumns:!1,hasTimestamp:!1,hasUniqueIdentifier:!1,hasImpactedAsset:!1,requiredColumns:[],missingColumns:[],supportsContinuousNRT:!0,nrtCompatibilityIssues:[],recommendedActions:[]},errors:[],warnings:[],suggestions:[]};try{let s=this.schemaValidator.validateKQLQuery(e);t.errors=s.errors,t.warnings=s.warnings;let n=this.analyzeQuery(e);this.validateRequiredColumns(n,t),this.validateNRTCompatibility(n,t),this.generateRecommendations(n,t),t.isValid=t.errors.length===0&&t.requirements.hasRequiredColumns&&t.requirements.hasTimestamp&&t.requirements.hasUniqueIdentifier&&t.requirements.hasImpactedAsset}catch(s){t.errors.push({message:`Detection rule validation failed: ${s}`,line:1,column:1,severity:"error",code:"DETECTION_VALIDATION_ERROR"}),t.isValid=!1}return t}analyzeQuery(e){let t=e.split(`
`),s={tables:[],projectedColumns:[],hasProject:!1,hasSummarize:!1,hasJoin:!1,hasUnion:!1,hasComments:!1,operators:[],filters:[]},n="",i=!1;for(let o=0;o<t.length;o++){let r=t[o].trim();if(r){if((r.startsWith("//")||r.startsWith("--")||r.includes("/*"))&&(s.hasComments=!0),!r.startsWith("|")&&!r.startsWith("//")&&!r.startsWith("--")){let c=r.match(/^([A-Za-z][A-Za-z0-9_]*)/);c&&(n=c[1],s.tables.includes(n)||s.tables.push(n))}if(r.includes("| project")){s.hasProject=!0,i=!0;let c=r.match(/\|\s*project\s+(.+)/);if(c){let f=c[1];this.parseProjectColumns(f,s)}}else i&&r.startsWith("    ")&&!r.includes("|")?this.parseProjectColumns(r.trim(),s):r.includes("|")&&!r.includes("| project")&&(i=!1);r.includes("| summarize")&&(s.hasSummarize=!0,s.operators.push("summarize"),i=!1),r.includes("join")&&(s.hasJoin=!0,s.operators.push("join")),r.includes("union")&&(s.hasUnion=!0,s.operators.push("union")),r.includes("externaldata")&&s.operators.push("externaldata")}}return s}parseProjectColumns(e,t){let s=e.split(",").map(n=>n.replace(/\/\/.*$/,"").trim()).filter(n=>n.length>0);t.projectedColumns.push(...s)}validateRequiredColumns(e,t){let s=t.requirements;this.hasColumn(e,this.REQUIRED_TIMESTAMP)?(s.hasTimestamp=!0,s.requiredColumns.push(this.REQUIRED_TIMESTAMP)):(s.missingColumns.push(this.REQUIRED_TIMESTAMP),t.errors.push({message:'Custom Detection Rules must return a "Timestamp" column',line:1,column:1,severity:"error",code:"MISSING_TIMESTAMP"})),s.hasUniqueIdentifier=this.validateUniqueIdentifiers(e,t),s.hasImpactedAsset=this.validateImpactedAsset(e,t),s.hasRequiredColumns=s.hasTimestamp&&s.hasUniqueIdentifier&&s.hasImpactedAsset}validateUniqueIdentifiers(e,t){let s=t.requirements,n=!1;for(let i of e.tables){let o=[];if(i.startsWith("Device")?o=this.ENDPOINT_IDENTIFIERS:i.startsWith("Alert")?o=this.ALERT_IDENTIFIERS:i.startsWith("Observation")?o=[...this.OBSERVATION_IDENTIFIERS,this.REQUIRED_TIMESTAMP]:o=[...this.DEFAULT_IDENTIFIERS,this.REQUIRED_TIMESTAMP],o.every(c=>this.hasColumn(e,c)))n=!0,s.requiredColumns.push(...o.filter(c=>!s.requiredColumns.includes(c)));else{let c=o.filter(f=>!this.hasColumn(e,f));s.missingColumns.push(...c.filter(f=>!s.missingColumns.includes(f))),t.warnings.push({message:`Table "${i}" requires unique identifier columns: ${o.join(", ")}. Missing: ${c.join(", ")}`,line:1,column:1,suggestion:`Add these columns to your project statement: ${c.join(", ")}`})}}return n||t.errors.push({message:"Query must return unique identifier columns for alert correlation",line:1,column:1,severity:"error",code:"MISSING_UNIQUE_IDENTIFIERS"}),n}validateImpactedAsset(e,t){let s=t.requirements,n=this.IMPACTED_ASSET_COLUMNS.filter(i=>this.hasColumn(e,i));return n.length>0?(s.requiredColumns.push(...n.filter(i=>!s.requiredColumns.includes(i))),!0):(s.missingColumns.push("ImpactedAsset"),t.errors.push({message:"Query must return at least one impacted asset column (DeviceId, DeviceName, RecipientEmailAddress, AccountObjectId, etc.)",line:1,column:1,severity:"error",code:"MISSING_IMPACTED_ASSET"}),!1)}validateNRTCompatibility(e,t){let s=t.requirements,n=e.tables.filter(o=>!this.NRT_SUPPORTED_TABLES.includes(o));n.length>0&&(s.supportsContinuousNRT=!1,s.nrtCompatibilityIssues.push(`Unsupported tables for NRT: ${n.join(", ")}`)),e.tables.length>1&&(s.supportsContinuousNRT=!1,s.nrtCompatibilityIssues.push("NRT queries can only reference one table")),(e.operators.filter(o=>this.NRT_INCOMPATIBLE_OPERATORS.includes(o)).length>0||e.hasJoin||e.hasUnion)&&(s.supportsContinuousNRT=!1,s.nrtCompatibilityIssues.push("NRT queries cannot use join, union, or externaldata operators")),e.hasComments&&(s.supportsContinuousNRT=!1,s.nrtCompatibilityIssues.push("NRT queries cannot contain comments")),s.supportsContinuousNRT||t.warnings.push({message:"Query is not compatible with Continuous (NRT) frequency",line:1,column:1,suggestion:"Consider simplifying the query to enable near real-time detection"})}generateRecommendations(e,t){let s=[];e.filters.some(i=>i.includes("ago(")||i.includes("Timestamp"))||s.push('Add a time filter (e.g., "| where Timestamp > ago(1d)") for better performance'),e.hasSummarize&&!e.hasProject&&s.push('Consider using "project" to explicitly select required columns before summarizing'),t.requirements.supportsContinuousNRT?s.push("\u2705 Query is compatible with Continuous (NRT) frequency for faster threat detection"):t.requirements.nrtCompatibilityIssues.length>0&&s.push("Consider simplifying query to enable Continuous (NRT) frequency"),t.requirements.missingColumns.length>0&&s.push(`Add missing required columns: ${t.requirements.missingColumns.join(", ")}`),t.requirements.recommendedActions=s,t.suggestions=s}hasColumn(e,t){if(!e.hasProject){for(let s of e.tables){let n=this.schemaValidator.getSchema(s);if(n&&n.columns.some(i=>i.name===t))return!0}return!1}return e.projectedColumns.some(s=>s.trim().split(" ")[0].toLowerCase()===t.toLowerCase()||s.includes("*"))}generateDetectionRuleTemplate(e){return`// Custom Detection Rule Template for ${e}
// This template includes all required columns for Defender XDR Custom Detection Rules

${e}
| where Timestamp > ago(1d)  // Time filter for performance
| where ActionType == "SpecificAction"  // Your detection logic here
| project 
    Timestamp,              // Required: Alert timestamp
    ${this.getRequiredColumnsForTable(e).join(`,
    `)},
    ${this.getRecommendedColumnsForTable(e).join(`,
    `)}
| limit 100`}getRequiredColumnsForTable(e){let t=[this.REQUIRED_TIMESTAMP];return e.startsWith("Device")?t.push("DeviceId","ReportId"):e.startsWith("Alert")||(e.startsWith("Observation")?t.push("ObservationId"):t.push("ReportId")),t.filter(s=>s!==this.REQUIRED_TIMESTAMP)}getRecommendedColumnsForTable(e){let t=[];return e.startsWith("Device")?t.push("DeviceName","AccountName"):e.startsWith("Email")?t.push("RecipientEmailAddress","SenderFromAddress"):e.startsWith("Identity")&&t.push("AccountObjectId","AccountUpn"),t}};function te(l){console.log("KQL Schema Reference Tools extension is now active!");let e=a.workspace.getConfiguration("kqlSchemaTools"),t=e.get("defaultSchemaSource","auto"),s=new U,n=new P(s),i=new M(s),o=new x(s),r=new k(s),c=new $(s);s.setSchemaSource(t),e.get("autoUpdateSchemas",!0)&&O(n);let p=a.window.createTreeView("kqlSchemaExplorer",{treeDataProvider:r,showCollapseAll:!0}),h={scheme:"file",language:"kql"},m=a.languages.registerCompletionItemProvider(h,o,".","|"," "),w=a.languages.registerHoverProvider(h,o),D=a.languages.createDiagnosticCollection("kql"),W=[a.commands.registerCommand("kql-schema-tools.refreshSchemas",()=>{s.refreshSchema(),r.refresh(),a.window.showInformationMessage("KQL schemas refreshed successfully!")}),a.commands.registerCommand("kql-schema-tools.viewTableSchema",d=>{s.showTableSchema(d)}),a.commands.registerCommand("kql-schema-tools.switchSchemaSource",async()=>{let d=[{label:"Auto-detect",description:"Automatically detect schema source from query",detail:"auto"},{label:"Microsoft Defender XDR",description:"Use XDR table schemas only",detail:"xdr"},{label:"Microsoft Sentinel",description:"Use Sentinel table schemas only",detail:"sentinel"}],v=await a.window.showQuickPick(d,{placeHolder:"Select schema source"});if(v){let S=v.detail;s.setSchemaSource(S),r.switchSource(S),a.window.showInformationMessage(`Schema source switched to: ${v.label}`)}}),a.commands.registerCommand("kql-schema-tools.createDetectionRule",()=>{c.createNewRule()}),a.commands.registerCommand("kql-schema-tools.validateDetectionRule",()=>{c.validateCurrentRule()}),a.commands.registerCommand("kql-schema-tools.exportRules",()=>{c.exportRulesToCSV()}),a.commands.registerCommand("kql-schema-tools.importRules",()=>{c.importRulesFromCSV()}),a.commands.registerCommand("kql-schema-tools.validateKQL",()=>{o.validateCurrentDocument(D)}),a.commands.registerCommand("kql-schema-tools.formatKQL",()=>{o.formatCurrentDocument()}),a.commands.registerCommand("kql-schema-tools.updateSchemasFromMicrosoft",async()=>{a.window.withProgress({location:a.ProgressLocation.Notification,title:"Updating KQL Schemas",cancellable:!1},async d=>{d.report({increment:0,message:"Fetching latest schemas from Microsoft Learn..."}),await n.updateAllSchemas(),d.report({increment:100,message:"Schema update complete!"}),r.refresh()})}),a.commands.registerCommand("kql-schema-tools.autoUpdateSchemas",async()=>{let d=a.workspace.getConfiguration("kqlSchemaTools"),v=d.get("autoUpdateSchemas",!0);await d.update("autoUpdateSchemas",!v,a.ConfigurationTarget.Global);let S=v?"disabled":"enabled";a.window.showInformationMessage(`Auto-update schemas ${S}`),v||O(n)}),a.commands.registerCommand("kql-schema-tools.validateDetectionRule",async()=>{let d=a.window.activeTextEditor;if(!d||d.document.languageId!=="kql"){a.window.showErrorMessage("Please open a KQL file to validate as a detection rule");return}let v=d.document.getText(),S=i.validateDetectionRule(v);se(S)}),a.commands.registerCommand("kql-schema-tools.generateDetectionTemplate",async()=>{let d=["DeviceProcessEvents","DeviceNetworkEvents","DeviceFileEvents","EmailEvents","AlertEvidence"],v=await a.window.showQuickPick(d,{placeHolder:"Select a table for the detection rule template"});if(v){let S=i.generateDetectionRuleTemplate(v),B=await a.workspace.openTextDocument({language:"kql",content:S});await a.window.showTextDocument(B)}})],j=a.workspace.onDidChangeTextDocument(async d=>{d.document.languageId==="kql"&&e.get("enableRealTimeValidation",!0)&&await o.validateDocument(d.document,D)}),_=a.workspace.onDidOpenTextDocument(async d=>{d.languageId==="kql"&&await o.validateDocument(d,D)}),K=a.workspace.onDidChangeConfiguration(d=>{if(d.affectsConfiguration("kqlSchemaTools")){let S=a.workspace.getConfiguration("kqlSchemaTools").get("defaultSchemaSource","auto");S!==s.getCurrentSource()&&(s.setSchemaSource(S),r.switchSource(S),a.window.showInformationMessage(`Schema source updated to: ${S.toUpperCase()}`))}}),I=a.window.createStatusBarItem(a.StatusBarAlignment.Right,100);I.command="kql-schema-tools.switchSchemaSource",I.tooltip="Click to change KQL schema source";let V=()=>{let d=s.getCurrentSource();I.text=`$(database) KQL: ${d.toUpperCase()}`,I.show()};V();let z=a.window.onDidChangeActiveTextEditor(d=>{d?.document.languageId==="kql"?(V(),I.show()):I.hide()});l.subscriptions.push(p,m,w,D,j,_,K,I,z,...W),s.refreshSchema(),l.globalState.get("hasShownWelcome",!1)||(a.window.showInformationMessage('KQL Schema Reference Tools activated! Use Ctrl+Shift+P and search "KQL" to see available commands.',"View Schema Explorer").then(d=>{d==="View Schema Explorer"&&a.commands.executeCommand("workbench.view.extension.kql-tools")}),l.globalState.update("hasShownWelcome",!0))}async function O(l){let e=a.workspace.getConfiguration("kqlSchemaTools"),t=e.get("autoUpdateSchemas",!0),s=e.get("updateCheckInterval",24);if(!(!t||s<=0))try{let n="lastSchemaUpdate",i=a.extensions.getExtension("kql-tools.kql-schema-reference-tools")?.exports?.context?.globalState;if(i){let o=i.get(n,0),r=Date.now();(r-o)/(1e3*60*60)>=s&&(console.log("Checking for KQL schema updates..."),await l.updateAllSchemas(),i.update(n,r))}}catch(n){console.warn("Auto schema update failed:",n)}}function se(l){let e=a.window.createOutputChannel("KQL Detection Rule Validation");e.clear(),e.show(),e.appendLine("\u{1F6E1}\uFE0F  CUSTOM DETECTION RULE VALIDATION RESULTS"),e.appendLine("=".repeat(50)),l.isValid?e.appendLine("\u2705 Detection rule is VALID and ready for deployment!"):e.appendLine("\u274C Detection rule has issues that need to be fixed"),e.appendLine(""),e.appendLine("\u{1F4CB} REQUIRED COLUMNS STATUS:"),e.appendLine(`\u251C\u2500 Timestamp column: ${l.requirements.hasTimestamp?"\u2705":"\u274C"}`),e.appendLine(`\u251C\u2500 Unique identifiers: ${l.requirements.hasUniqueIdentifier?"\u2705":"\u274C"}`),e.appendLine(`\u2514\u2500 Impacted asset: ${l.requirements.hasImpactedAsset?"\u2705":"\u274C"}`),l.requirements.requiredColumns.length>0&&(e.appendLine(""),e.appendLine("\u2705 Found required columns:"),l.requirements.requiredColumns.forEach(t=>{e.appendLine(`   \u2022 ${t}`)})),l.requirements.missingColumns.length>0&&(e.appendLine(""),e.appendLine("\u274C Missing required columns:"),l.requirements.missingColumns.forEach(t=>{e.appendLine(`   \u2022 ${t}`)})),e.appendLine(""),e.appendLine("\u26A1 CONTINUOUS (NRT) COMPATIBILITY:"),l.requirements.supportsContinuousNRT?e.appendLine("\u2705 Query supports Continuous (NRT) frequency for near real-time detection"):(e.appendLine("\u26A0\uFE0F  Query is NOT compatible with Continuous (NRT) frequency"),l.requirements.nrtCompatibilityIssues.forEach(t=>{e.appendLine(`   \u2022 ${t}`)})),l.errors.length>0&&(e.appendLine(""),e.appendLine("\u{1F6A8} ERRORS (must fix):"),l.errors.forEach(t=>{e.appendLine(`   \u2022 ${t.message}`)})),l.warnings.length>0&&(e.appendLine(""),e.appendLine("\u26A0\uFE0F  WARNINGS:"),l.warnings.forEach(t=>{e.appendLine(`   \u2022 ${t.message}`)})),l.requirements.recommendedActions.length>0&&(e.appendLine(""),e.appendLine("\u{1F4A1} RECOMMENDATIONS:"),l.requirements.recommendedActions.forEach(t=>{e.appendLine(`   \u2022 ${t}`)})),e.appendLine(""),e.appendLine("\u{1F4D6} For more details, see: https://learn.microsoft.com/en-us/defender-xdr/custom-detections")}function ne(){}0&&(module.exports={activate,deactivate});
